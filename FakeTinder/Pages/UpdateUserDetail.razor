@page "/update-user-detail"

@inject NavigationManager NavigationManager
@inject IUserService UserServices
@inject IUserProfileService UserProfileServices
@inject IGetProfileDataService GetProfileDataService
@inject LoggedUserService LoggedUserService


<PageTitle>Update detail</PageTitle>

<EditForm Model="@user" OnValidSubmit="Update">
	<DataAnnotationsValidator />
	<div class="mb-3">
		<label for="FirstName" class="form-label">First Name</label>
		<div class="col-md-4">
			<InputText class="form-control" @bind-Value="userProfile.User.FirstName" />
		</div>
		<ValidationMessage For="@(() => userProfile.User.FirstName)" />
	</div>
	<div class="mb-3">
		<label for="LastName" class="form-label">Last Name</label>
		<div class="col-md-4">
			<InputText class="form-control" @bind-Value="userProfile.User.LastName" />
		</div>
		<ValidationMessage For="@(() => userProfile.User.LastName)" />
	</div>
	<div class="mb-3">
		<label for="UserName" class="form-label">User Name</label>
		<div class="col-md-4">
			<InputText class="form-control" @bind-Value="userProfile.UserName" />
		</div>
		<ValidationMessage For="@(() => userProfile.UserName)" />
	</div>
	<div class="md-3">
		<div class="col-sm-12">
			<label for="BirthDate" class="form-label">Birth Date</label>
			<div class="col-md-4">
				<input type="date" @bind-value="userProfile.BirthDate" />
			</div>
		</div>
		<ValidationMessage For="@(() => userProfile.BirthDate)" />
	</div>
	<div>
		<div class="mb-3">
			<label for="Height" class="form-label">Height</label>
			<div class="col-md-4">
				<InputNumber class="form-control" @bind-Value="userProfile.Height" />
			</div>
		</div>
	</div>
</EditForm>

@code {

	public int UserId { get; set; }
	protected UserEntity user;
	protected UserProfileEntity userProfile;

	protected override void OnInitialized()
	{
		user = new UserEntity();
		userProfile = new UserProfileEntity();
		UserId = LoggedUserService.User.Id;
		var userList = UserProfileServices.GetAllUserProfiles();
		//var thefuck = userList.FirstOrDefault();
		userProfile = userList.Where(x => x.User.Id == UserId).FirstOrDefault();
	}

	protected async Task Update()
	{
		if (user.Id < 1)
		{
			return;
		}

		UserProfileServices.UpdateUserProfile(userProfile);
		NavigationManager.NavigateTo($"/user-detail");
	}

	protected void Cancel()
	{

	}
}