@page "/"
@page "/login"
@layout LoginLayout

@inject NavigationManager NavigationManager
@inject IUserService UserServices


<PageTitle>Login</PageTitle>
<div>
	<EditForm Model="loginUser" OnValidSubmit="SubmitLogin">
		<DataAnnotationsValidator />
		<div>
			<div class="mb-2">
				<label for="FirstName" class="form-label">Login</label>
				<div class="col-md-4">
					<InputText class="form-control" @bind-Value="loginUser.InLogin" />
				</div>
				<ValidationMessage For="@(() => loginUser.InLogin)" />
			</div>
			<div class="mb-3">
				<label for="Password">Password</label>
				<div class="col-md-4">
					<InputText type="password" class="form-control" @bind-Value="loginUser.InPassword" />
				</div>
				<ValidationMessage For="@(() => loginUser.InPassword)" />
			</div>
			<div class="form-group">
				<button type="submit" class="btn btn-primary">Submit</button>
				<button class="btn btn-secondary" @onclick="Register">Register Account</button>
			</div>
		</div>
	</EditForm>
</div>

@code {
	private LoginUser loginUser = new();
	protected UserEntity user = new();
	protected List<UserEntity> userList = new();

	protected async Task SubmitLogin()
	{
		user = UserServices.GetLogin(loginUser.InLogin, loginUser.InPassword);

		if (loginUser.InLogin == user.Login && loginUser.InPassword == user.Password)
		{
			NavigationManager.NavigateTo("/register-account");
		}
	}

	protected async Task Register()
	{
		NavigationManager.NavigateTo("/register-account");
	}

	//public class LoginUser
	//{
	//	public string InLogin { get; set; }
	//	public string InPassword { get; set; }
	//}
}